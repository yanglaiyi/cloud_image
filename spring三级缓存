<mxfile host="app.diagrams.net" modified="2022-02-13T12:42:19.615Z" agent="5.0 (Windows NT 6.2; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.82 Safari/537.36" etag="PE-pKQUvTedTlorAkX8e" version="16.5.6" type="github">
  <diagram id="QssZEDvJ8iLZFO4mHrI6" name="第 1 页">
    <mxGraphModel dx="858" dy="403" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="aix-79T36t2MBYG8dRaV-14" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;fontFamily=Helvetica;fontSize=16;fontColor=default;" edge="1" parent="1" source="aix-79T36t2MBYG8dRaV-2" target="aix-79T36t2MBYG8dRaV-5">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="aix-79T36t2MBYG8dRaV-2" value="&lt;font style=&quot;font-size: 16px&quot;&gt;一级缓存&lt;br&gt;SingletonObject&lt;br&gt;&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;strokeWidth=2;fillWeight=4;hachureGap=8;hachureAngle=45;fillColor=#dae8fc;sketch=1;strokeColor=#6c8ebf;" vertex="1" parent="1">
          <mxGeometry x="170" y="710" width="160" height="60" as="geometry" />
        </mxCell>
        <mxCell id="aix-79T36t2MBYG8dRaV-15" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;fontFamily=Helvetica;fontSize=16;fontColor=default;" edge="1" parent="1" source="aix-79T36t2MBYG8dRaV-3" target="aix-79T36t2MBYG8dRaV-6">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="aix-79T36t2MBYG8dRaV-3" value="&lt;font style=&quot;font-size: 16px&quot;&gt;二级缓存&lt;br&gt;earlySingletonObject&lt;br&gt;&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;strokeWidth=2;fillWeight=4;hachureGap=8;hachureAngle=45;fillColor=#dae8fc;sketch=1;strokeColor=#6c8ebf;" vertex="1" parent="1">
          <mxGeometry x="175" y="860" width="160" height="60" as="geometry" />
        </mxCell>
        <mxCell id="aix-79T36t2MBYG8dRaV-20" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;fontFamily=Helvetica;fontSize=16;fontColor=default;" edge="1" parent="1" source="aix-79T36t2MBYG8dRaV-4" target="aix-79T36t2MBYG8dRaV-9">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="aix-79T36t2MBYG8dRaV-4" value="&lt;font style=&quot;font-size: 16px&quot;&gt;三级缓存&lt;br&gt;SingletonFactories&lt;br&gt;&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;strokeWidth=2;fillWeight=4;hachureGap=8;hachureAngle=45;fillColor=#dae8fc;sketch=1;strokeColor=#6c8ebf;" vertex="1" parent="1">
          <mxGeometry x="170" y="980" width="170" height="60" as="geometry" />
        </mxCell>
        <mxCell id="aix-79T36t2MBYG8dRaV-5" value="&lt;font style=&quot;font-size: 16px&quot;&gt;spring的容器，也就是存放完整的bean实例，已经实例化和初始化好的实例&lt;br&gt;&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;strokeWidth=2;fillWeight=4;hachureGap=8;hachureAngle=45;fillColor=#dae8fc;sketch=1;strokeColor=#6c8ebf;" vertex="1" parent="1">
          <mxGeometry x="430" y="710" width="240" height="60" as="geometry" />
        </mxCell>
        <mxCell id="aix-79T36t2MBYG8dRaV-16" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.75;entryDx=0;entryDy=0;fontFamily=Helvetica;fontSize=16;fontColor=default;" edge="1" parent="1" source="aix-79T36t2MBYG8dRaV-6" target="aix-79T36t2MBYG8dRaV-7">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="aix-79T36t2MBYG8dRaV-18" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontFamily=Helvetica;fontSize=16;fontColor=default;" edge="1" parent="1" source="aix-79T36t2MBYG8dRaV-6" target="aix-79T36t2MBYG8dRaV-8">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="aix-79T36t2MBYG8dRaV-6" value="&lt;font style=&quot;font-size: 16px&quot;&gt;AOP?&lt;br&gt;&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;strokeWidth=2;fillWeight=4;hachureGap=8;hachureAngle=45;sketch=1;fillColor=#fff2cc;strokeColor=#d6b656;" vertex="1" parent="1">
          <mxGeometry x="455" y="860" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="aix-79T36t2MBYG8dRaV-7" value="&lt;font style=&quot;font-size: 16px&quot;&gt;存放半成品的bean实例，bean还未初始化&lt;br&gt;&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;strokeWidth=2;fillWeight=4;hachureGap=8;hachureAngle=45;fillColor=#dae8fc;sketch=1;strokeColor=#6c8ebf;" vertex="1" parent="1">
          <mxGeometry x="715" y="790" width="190" height="60" as="geometry" />
        </mxCell>
        <mxCell id="aix-79T36t2MBYG8dRaV-8" value="&lt;font style=&quot;font-size: 16px&quot;&gt;存放bean的代理对象，目标bean，也是半成品&lt;br&gt;&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;strokeWidth=2;fillWeight=4;hachureGap=8;hachureAngle=45;fillColor=#dae8fc;sketch=1;strokeColor=#6c8ebf;" vertex="1" parent="1">
          <mxGeometry x="715" y="900" width="210" height="60" as="geometry" />
        </mxCell>
        <mxCell id="aix-79T36t2MBYG8dRaV-19" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontFamily=Helvetica;fontSize=16;fontColor=default;" edge="1" parent="1" source="aix-79T36t2MBYG8dRaV-9" target="aix-79T36t2MBYG8dRaV-11">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="aix-79T36t2MBYG8dRaV-9" value="&lt;div&gt;&lt;span style=&quot;font-size: 16px&quot;&gt;存放的是ObjectFactories，传入的是匿名内部类，ObjectFactories.getObject()最终调用的是getEarlyBeanReference方法&lt;/span&gt;&lt;/div&gt;" style="whiteSpace=wrap;html=1;rounded=1;sketch=1;fillWeight=4;hachureGap=8;hachureAngle=45;fontFamily=Helvetica;fontSize=12;fontColor=default;strokeColor=#6c8ebf;strokeWidth=2;fillColor=#dae8fc;align=left;" vertex="1" parent="1">
          <mxGeometry x="380" y="980" width="300" height="60" as="geometry" />
        </mxCell>
        <mxCell id="aix-79T36t2MBYG8dRaV-11" value="&lt;font style=&quot;font-size: 16px&quot;&gt;如果bean被代理，方法返回的bean代理的对象，如果没被代理，返回的是bean实例&lt;/font&gt;" style="whiteSpace=wrap;html=1;rounded=1;sketch=1;fillWeight=4;hachureGap=8;hachureAngle=45;fontFamily=Helvetica;fontSize=12;fontColor=default;strokeColor=#6c8ebf;strokeWidth=2;fillColor=#dae8fc;" vertex="1" parent="1">
          <mxGeometry x="740" y="980" width="300" height="60" as="geometry" />
        </mxCell>
        <mxCell id="aix-79T36t2MBYG8dRaV-12" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;fontFamily=Helvetica;fontSize=12;fontColor=default;" edge="1" parent="1" source="aix-79T36t2MBYG8dRaV-7" target="aix-79T36t2MBYG8dRaV-7">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="aix-79T36t2MBYG8dRaV-21" value="&lt;ol&gt;&lt;li style=&quot;box-sizing: border-box ; outline: 0px ; margin: 8px 0px 0px 40px ; padding: 0px ; list-style: decimal ; overflow-wrap: break-word&quot;&gt;先创建BeanA,先实例化BeanA并包装为BeanFactory并放入三级缓存中.&lt;/li&gt;&lt;li style=&quot;box-sizing: border-box ; outline: 0px ; margin: 8px 0px 0px 40px ; padding: 0px ; list-style: decimal ; overflow-wrap: break-word&quot;&gt;给BeanA进行属性填充时检查依赖,发现BeanB未加载过,则先去加载BeanB&lt;/li&gt;&lt;li style=&quot;box-sizing: border-box ; outline: 0px ; margin: 8px 0px 0px 40px ; padding: 0px ; list-style: decimal ; overflow-wrap: break-word&quot;&gt;BeanB创建过程首先也要包装成BeanFactory放到三级缓存,填充属性时则是从三级缓存获取Bean将BeanA填充进去&lt;/li&gt;&lt;li style=&quot;box-sizing: border-box ; outline: 0px ; margin: 8px 0px 0px 40px ; padding: 0px ; list-style: decimal ; overflow-wrap: break-word&quot;&gt;BeanB填充BeanA从三级缓存中的BeanAFacotry获取BeanA&lt;/li&gt;&lt;li style=&quot;box-sizing: border-box ; outline: 0px ; margin: 8px 0px 0px 40px ; padding: 0px ; list-style: decimal ; overflow-wrap: break-word&quot;&gt;获取主要通过ObjectFactory.getObject方法,该方法调用getEarlyBeanReference方法,他会创建Bean/&lt;span style=&quot;box-sizing: border-box ; outline: 0px ; font-weight: 700 ; overflow-wrap: break-word&quot;&gt;Bean的代理&lt;/span&gt;并删除BeanA的三级缓存,加入二级缓存&lt;/li&gt;&lt;li style=&quot;box-sizing: border-box ; outline: 0px ; margin: 8px 0px 0px 40px ; padding: 0px ; list-style: decimal ; overflow-wrap: break-word&quot;&gt;BeanB初始化完毕加入一级缓存,BeanA继续执行初始化,初始化完毕比较BeanA二级缓存和一级缓存是否一致,一致则加入一级缓存删除二级缓存&lt;/li&gt;&lt;/ol&gt;" style="rounded=0;whiteSpace=wrap;html=1;sketch=1;fillWeight=4;hachureGap=8;hachureAngle=45;fontFamily=Helvetica;fontSize=16;strokeColor=#82b366;strokeWidth=2;fillColor=#d5e8d4;align=left;" vertex="1" parent="1">
          <mxGeometry x="100" y="1090" width="610" height="290" as="geometry" />
        </mxCell>
        <mxCell id="aix-79T36t2MBYG8dRaV-25" value="&lt;h2 style=&quot;box-sizing: border-box ; outline: 0px ; margin: 8px 0px 16px ; padding: 0px ; font-family: &amp;#34;pingfang sc&amp;#34; , &amp;#34;microsoft yahei&amp;#34; , &amp;#34;simhei&amp;#34; , &amp;#34;arial&amp;#34; , &amp;#34;simsun&amp;#34; ; font-size: 22px ; color: rgb(79 , 79 , 79) ; line-height: 30px ; overflow-wrap: break-word ; background-color: rgb(255 , 255 , 255)&quot;&gt;Spring为什么定三级缓存(二级缓存也可以解决循环依赖的问题)&lt;/h2&gt;&lt;span style=&quot;color: rgb(85 , 86 , 102) ; font-family: , &amp;#34;sf ui text&amp;#34; , &amp;#34;arial&amp;#34; , &amp;#34;pingfang sc&amp;#34; , &amp;#34;hiragino sans gb&amp;#34; , &amp;#34;microsoft yahei&amp;#34; , &amp;#34;wenquanyi micro hei&amp;#34; , sans-serif ; background-color: rgb(238 , 240 , 244)&quot;&gt;&lt;div&gt;首先当Bean没有循环依赖三级缓存是&lt;b&gt;没有&lt;/b&gt;什么意义的,当有循环依赖但Bean并没有AOP代理,则会直接返回原对象,&lt;b&gt;也没有&lt;/b&gt;什么意义.主要在当Bean存在循环依赖并且还有AOP代理时,三级缓存才有效果,三级缓存主要预防Bean有依赖时还可以完成代理增强(可查看&lt;code style=&quot;box-sizing: border-box ; outline: 0px ; font-family: &amp;#34;source code pro&amp;#34; , &amp;#34;dejavu sans mono&amp;#34; , &amp;#34;ubuntu mono&amp;#34; , &amp;#34;anonymous pro&amp;#34; , &amp;#34;droid sans mono&amp;#34; , &amp;#34;menlo&amp;#34; , &amp;#34;monaco&amp;#34; , &amp;#34;consolas&amp;#34; , &amp;#34;inconsolata&amp;#34; , &amp;#34;courier&amp;#34; , monospace , &amp;#34;pingfang sc&amp;#34; , &amp;#34;microsoft yahei&amp;#34; , sans-serif ; font-size: 14px ; line-height: 22px ; color: rgb(199 , 37 , 78) ; background-color: rgb(249 , 242 , 244) ; border-radius: 2px ; padding: 2px 4px ; overflow-wrap: break-word&quot;&gt;SmartInstanttiationAwareBeanPostProcessor.getEarlyBeanReference方法&lt;/code&gt;以及&lt;code style=&quot;box-sizing: border-box ; outline: 0px ; font-family: &amp;#34;source code pro&amp;#34; , &amp;#34;dejavu sans mono&amp;#34; , &amp;#34;ubuntu mono&amp;#34; , &amp;#34;anonymous pro&amp;#34; , &amp;#34;droid sans mono&amp;#34; , &amp;#34;menlo&amp;#34; , &amp;#34;monaco&amp;#34; , &amp;#34;consolas&amp;#34; , &amp;#34;inconsolata&amp;#34; , &amp;#34;courier&amp;#34; , monospace , &amp;#34;pingfang sc&amp;#34; , &amp;#34;microsoft yahei&amp;#34; , sans-serif ; font-size: 14px ; line-height: 22px ; color: rgb(199 , 37 , 78) ; background-color: rgb(249 , 242 , 244) ; border-radius: 2px ; padding: 2px 4px ; overflow-wrap: break-word&quot;&gt;AbstractAutowireCapableBeanFactory类595行和966行&lt;/code&gt;).而本身Spring设计Bean的代理增强是在Bean初始化完成后的AnnotationAwareAspectJAutoProxyCreator后置处理器中完成的.提前执行则和设计思路不符.所以&lt;span style=&quot;box-sizing: border-box ; outline: 0px ; font-weight: 700 ; overflow-wrap: break-word&quot;&gt;三级缓存主要起预防循环依赖作用,可能是一个补丁机制&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;" style="whiteSpace=wrap;html=1;rounded=1;sketch=1;fillWeight=4;hachureGap=8;hachureAngle=45;fontFamily=Helvetica;fontSize=16;fontColor=default;strokeColor=#6c8ebf;strokeWidth=2;fillColor=#dae8fc;align=left;" vertex="1" parent="1">
          <mxGeometry x="100" y="1460" width="695" height="220" as="geometry" />
        </mxCell>
        <mxCell id="aix-79T36t2MBYG8dRaV-26" value="&lt;b&gt;AOP发生时期&lt;/b&gt;&lt;br&gt;1.如果没有循环依赖的AOP，那么是在初始化后置处理器进行&lt;br&gt;2.有循环依赖的AOP，那么AOP阶段是在B从三级缓冲拿回A的时候已经做了代理，只是在初始化后置的时候判断了一下而已。" style="rounded=1;whiteSpace=wrap;html=1;strokeWidth=2;fillWeight=4;hachureGap=8;hachureAngle=45;fillColor=#dae8fc;sketch=1;fontFamily=Helvetica;fontSize=16;strokeColor=#6c8ebf;align=left;" vertex="1" parent="1">
          <mxGeometry x="750" y="1120" width="575" height="110" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
